{"ast":null,"code":"const courseList1 = [\"MathIII\", \"EnglishI\", \"Something\"];\nconst courseList2 = [\"MathI\", \"EnglishII\", \"Something\"];\nexport default {\n  data() {\n    return {\n      courseList: {\n        \"Asia\": {\n          \"China\": [\"Beijing\", \"Shanghai\", \"Guangzhou\", \"Tianjin\"],\n          \"India\": [\"New Delhi\", \"Mumbai\", \"Bangalore\", \"Chennai\"],\n          \"Japan\": [\"Tokyo\", \"Kyoto\", \"Nagoya\", \"Hiroshima\"],\n          \"Singapore\": [\"Singapore\"],\n          \"Malaysia\": [\"Kuala Lumpur\", \"Johor Bahru\", \"George Town\", \"Kota Kinabalu\"]\n        },\n        \"Europe\": {\n          \"Germany\": [\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\", \"Stuttgart\"],\n          \"UK\": [\"London\", \"Birmingham\", \"Liverpool\", \"Bristol\"],\n          \"France\": [\"Paris\", \"Marseille\", \"Bordeaux\", \"Toulouse\"]\n        }\n      },\n      firstName: '',\n      lastName: '',\n      email: '',\n      semester: '',\n      course: '',\n      textArea: '',\n      note: '',\n      returned: ''\n    };\n  },\n\n  methods: {\n    handleSubmit() {\n      let info = [this.firstName, this.lastName, this.email, this.semester, this.course, this.note];\n      fetch(\"/api/sendRegistration?info=\" + info).then(response => response.text()).then(data => {\n        this.returned = data;\n      });\n    },\n\n    /* onChange(event) {\n        this.firstName=event.target.value;\n       } */\n    onChange2(event) {\n      this.firstName = event.target.value;\n    }\n\n  },\n  watch: {\n    semester(newQuestion) {\n      if (newQuestion === \"spring\") {\n        // Clear previously selected values\n        this.courseList = []; // Populate list of countries in the second dropdown\n\n        if (this.semester.length > 0) {\n          this.courseList = this.places[this.selectedContinent];\n        }\n      } else {\n        this.note = newQuestion;\n      }\n    }\n\n  },\n\n  mounted() {\n    /* fetch(\"/api/messages/greeting\")\n         .then((response)=> response.text())\n         .then((data)=>{ this.greeting=data })*/\n  }\n\n};","map":{"version":3,"mappings":"AAmDA,MAAMA,WAAU,GAAI,CAClB,SADkB,EAElB,UAFkB,EAGlB,WAHkB,CAApB;AAKA,MAAMC,WAAU,GAAI,CAClB,OADkB,EAElB,WAFkB,EAGlB,WAHkB,CAApB;AAMA,eAAe;EACbC,IAAI,GAAG;IAOL,OAAO;MACLC,UAAU,EAAE;QACV,QAAQ;UACN,SAAS,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,SAArC,CADH;UAEN,SAAS,CAAC,WAAD,EAAc,QAAd,EAAwB,WAAxB,EAAqC,SAArC,CAFH;UAGN,SAAS,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,WAA7B,CAHH;UAIN,aAAa,CAAC,WAAD,CAJP;UAKN,YAAY,CAAC,cAAD,EAAiB,aAAjB,EAAgC,aAAhC,EAA+C,eAA/C;QALN,CADE;QAQV,UAAU;UACR,WAAW,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,SAAhC,EAA2C,WAA3C,EAAwD,WAAxD,CADH;UAER,MAAM,CAAC,QAAD,EAAW,YAAX,EAAyB,WAAzB,EAAsC,SAAtC,CAFE;UAGR,UAAU,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,EAAmC,UAAnC;QAHF;MARA,CADP;MAoBLC,SAAS,EAAE,EApBN;MAqBLC,QAAQ,EAAC,EArBJ;MAsBLC,KAAK,EAAE,EAtBF;MAuBLC,QAAQ,EAAE,EAvBL;MAwBLC,MAAM,EAAE,EAxBH;MAyBLC,QAAQ,EAAE,EAzBL;MA0BLC,IAAI,EAAE,EA1BD;MA2BLC,QAAQ,EAAE;IA3BL,CAAP;EA6BD,CArCY;;EAsCbC,OAAO,EAAE;IAGPC,YAAY,GAAG;MACX,IAAIC,IAAG,GAAI,CACT,KAAKV,SADI,EAET,KAAKC,QAFI,EAGT,KAAKC,KAHI,EAIT,KAAKC,QAJI,EAKT,KAAKC,MALI,EAMT,KAAKE,IANI,CAAX;MAQAK,KAAK,CAAC,gCAA+BD,IAAhC,CAAL,CACKE,IADL,CACUC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUd,IAAG,IAAI;QAAE,KAAKS,QAAL,GAAgBT,IAAhB;MAAsB,CAFzC;IAGH,CAfM;;IAgBR;;;IAMCiB,SAAS,CAACC,KAAD,EAAQ;MAEf,KAAKhB,SAAL,GAAegB,KAAK,CAACC,MAAN,CAAaC,KAA5B;IAGF;;EA3BO,CAtCI;EAmEbC,KAAK,EAAE;IACLhB,QAAQ,CAACiB,WAAD,EAAc;MACpB,IAAIA,WAAW,KAAG,QAAlB,EAA4B;QAC1B;QACA,KAAKrB,UAAL,GAAkB,EAAlB,CAF0B,CAI1B;;QACA,IAAI,KAAKI,QAAL,CAAckB,MAAd,GAAuB,CAA3B,EAA8B;UAC5B,KAAKtB,UAAL,GAAkB,KAAKuB,MAAL,CAAY,KAAKC,iBAAjB,CAAlB;QACF;MACF,CARA,MASI;QACF,KAAKjB,IAAL,GAAUc,WAAV;MACF;IACF;;EAdK,CAnEM;;EAoFbI,OAAO,GAAG;IAET;;;EAKD;;AA3Fa,CAAf","names":["courseList1","courseList2","data","courseList","firstName","lastName","email","semester","course","textArea","note","returned","methods","handleSubmit","info","fetch","then","response","text","onChange2","event","target","value","watch","newQuestion","length","places","selectedContinent","mounted"],"sourceRoot":"","sources":["C:\\Users\\graym\\IdeaProjects\\demo\\src\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <label>FirstName :</label>\n      <input type=\"text\" v-model=\"firstName\" required>\n\n      <label>LastName :</label>\n      <input type=\"text\" v-model=\"lastName\" required>\n\n      <label>Email :</label>\n      <input type=\"email\" v-model=\"email\" required>\n\n      <label>Semester :</label>\n\n      <select id=\"semester\" v-model=\"semester\" @change=\"onChange($event)\">\n        <option value=\"spring\">spring</option>\n        <option value=\"summer\">summer</option>\n      </select>\n\n      <label>Course :</label>\n      <select id=\"course\" v-model=\"course\">\n        <option value=\"courseA\">courseA</option>\n        <option value=\"courseB\">courseB</option>\n      </select>\n      Your age: <select id=\"ageselect\"><option value=\"\">Please select</option></select>\n\n\n      <label>Note for Professor :</label>\n      <textarea v-model=\"note\" rows=\"5\" cols=\"33\"> </textarea>\n\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n\n    </form>\n\n\n    <p> FirstName: {{ firstName }} </p>\n    <p> LastName: {{ lastName }} </p>\n    <p> Email: {{ email }} </p>\n    <p> Semester: {{ semester  }} </p>\n    <p> Course: {{ course }} </p>\n    <p> Note: {{ note  }} </p>\n\n  </div>\n\n</template>\n\n\n<script>\n\nconst courseList1 = [\n  \"MathIII\",\n  \"EnglishI\",\n  \"Something\"\n];\nconst courseList2 = [\n  \"MathI\",\n  \"EnglishII\",\n  \"Something\"\n];\n\nexport default {\n  data() {\n\n\n\n\n\n\n    return {\n      courseList: {\n        \"Asia\": {\n          \"China\": [\"Beijing\", \"Shanghai\", \"Guangzhou\", \"Tianjin\"],\n          \"India\": [\"New Delhi\", \"Mumbai\", \"Bangalore\", \"Chennai\"],\n          \"Japan\": [\"Tokyo\", \"Kyoto\", \"Nagoya\", \"Hiroshima\"],\n          \"Singapore\": [\"Singapore\"],\n          \"Malaysia\": [\"Kuala Lumpur\", \"Johor Bahru\", \"George Town\", \"Kota Kinabalu\"]\n        },\n        \"Europe\": {\n          \"Germany\": [\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\", \"Stuttgart\"],\n          \"UK\": [\"London\", \"Birmingham\", \"Liverpool\", \"Bristol\"],\n          \"France\": [\"Paris\", \"Marseille\", \"Bordeaux\", \"Toulouse\"]\n        }\n      },\n\n\n\n\n\n      firstName: '',\n      lastName:'',\n      email: '',\n      semester: '',\n      course: '',\n      textArea: '',\n      note: '',\n      returned: '',\n    }\n  },\n  methods: {\n\n\n    handleSubmit() {\n        let info = [\n          this.firstName,\n          this.lastName,\n          this.email,\n          this.semester,\n          this.course,\n          this.note\n        ];\n        fetch(\"/api/sendRegistration?info=\"+ info)\n            .then(response => response.text())\n            .then(data =>{ this.returned = data })\n    },\n   /* onChange(event) {\n\n      this.firstName=event.target.value;\n\n\n    } */\n    onChange2(event) {\n\n      this.firstName=event.target.value;\n\n\n    }\n  },\n  watch: {\n    semester(newQuestion) {\n      if (newQuestion===\"spring\") {\n        // Clear previously selected values\n        this.courseList = [];\n\n        // Populate list of countries in the second dropdown\n        if (this.semester.length > 0) {\n          this.courseList = this.places[this.selectedContinent]\n        }\n      }\n      else{\n        this.note=newQuestion;\n      }\n    }\n  },\n\n  mounted() {\n\n   /* fetch(\"/api/messages/greeting\")\n        .then((response)=> response.text())\n        .then((data)=>{ this.greeting=data })*/\n\n\n  }\n}\n\n\n\n\n</script>\n\n\n<style scoped>\n\nform {\n  max-width: 600px;\n  margin: 30px auto;\n  background: #fff;\n  text-align: left;\n  padding: 20px;\n  border-radius: 10px;\n}\n\nlabel {\n  color: #aaa;\n  display: inline-block;\n  margin: 25px 0 15px;\n  text-transform: uppercase;\n}\n\ninput, select {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid #ddd;\n  color: #555;\n}\n\nbutton {\n  background: rgb(7, 24, 7);\n  border: 0;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 20px;\n}\n\ntextarea {\n  outline: #2c2c2c;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  color: #555;\n  resize: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}