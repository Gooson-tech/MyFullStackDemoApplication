{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      courseList: {\n        \"spring\": [\"Beijing\", \"Shanghai\", \"Guangzhou\", \"Tianjin\"],\n        \"fall\": [\"Beijing1\", \"Shanghai2\", \"Guangzhou3\", \"Tianjin4\"],\n        \"summer\": [\"Beijing2\", \"Shanghai1\", \"ssasd\", \"asd\"]\n      },\n      firstName: '',\n      lastName: '',\n      email: '',\n      semester: '',\n      course: '',\n      note: '',\n      returned: '',\n      courses: [],\n      user: {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        semester: this.semester,\n        course: this.course,\n        note: this.note\n      }\n    };\n  },\n\n  methods: {\n    handleSubmit() {\n      /* let info = [\n         this.firstName,\n         this.lastName,\n         this.email,\n         this.semester,\n         this.course,\n         this.note\n       ];*/\n      this.user.firstName = this.firstName;\n      this.user.lastName = this.lastName;\n      this.user.email = this.email;\n      this.user.semester = this.semester;\n      this.user.course = this.course;\n      this.user.note = this.note;\n      axios.post(\"http://localhost:3000/api/sendRegistration\", this.user).catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n      });\n      /*     fetch(\"/api/sendRegistration?personForm=\" + info)\n               .then(response => response.text())\n               //.then(data =>{ this.returned = data })*/\n    }\n\n  },\n  watch: {\n    semester(selected) {\n      // clear previously selected values\n      this.course = '';\n      this.courses = []; //set courses depending on the selected semester\n\n      this.courses = this.courseList[selected];\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"AAiDA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,IAAI,GAAG;IAEL,OAAO;MACLC,UAAU,EAAE;QACV,UAAU,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,SAArC,CADA;QAEV,QAAQ,CAAC,UAAD,EAAa,WAAb,EAA0B,YAA1B,EAAwC,UAAxC,CAFE;QAGV,UAAU,CAAC,UAAD,EAAa,WAAb,EAA0B,OAA1B,EAAmC,KAAnC;MAHA,CADP;MAMLC,SAAS,EAAE,EANN;MAOLC,QAAQ,EAAC,EAPJ;MAQLC,KAAK,EAAE,EARF;MASLC,QAAQ,EAAE,EATL;MAULC,MAAM,EAAE,EAVH;MAWLC,IAAI,EAAE,EAXD;MAYLC,QAAQ,EAAE,EAZL;MAaLC,OAAO,EAAE,EAbJ;MAeLC,IAAI,EAAE;QACJR,SAAS,EAAE,KAAKA,SADZ;QAEJC,QAAQ,EAAE,KAAKA,QAFX;QAGJC,KAAK,EAAE,KAAKA,KAHR;QAIJC,QAAQ,EAAE,KAAKA,QAJX;QAKJC,MAAM,EAAE,KAAKA,MALT;QAMJC,IAAI,EAAE,KAAKA;MANP;IAfD,CAAP;EAyBD,CA5BY;;EA6BbI,OAAO,EAAE;IACPC,YAAY,GAAG;MACd;;;;;;;;MASC,KAAKF,IAAL,CAAUR,SAAV,GAAqB,KAAKA,SAA1B;MACA,KAAKQ,IAAL,CAAUP,QAAV,GAAoB,KAAKA,QAAzB;MACA,KAAKO,IAAL,CAAUN,KAAV,GAAiB,KAAKA,KAAtB;MACA,KAAKM,IAAL,CAAUL,QAAV,GAAoB,KAAKA,QAAzB;MACA,KAAKK,IAAL,CAAUJ,MAAV,GAAkB,KAAKA,MAAvB;MACA,KAAKI,IAAL,CAAUH,IAAV,GAAgB,KAAKA,IAArB;MACAR,KAAK,CAACc,IAAN,CAAW,4CAAX,EAAyD,KAAKH,IAA9D,EAAoEI,KAApE,CAA0E,UAAUC,KAAV,EAAiB;QACzF,IAAIA,KAAK,CAACC,QAAV,EAAoB;UAClB;UACA;UACAC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAehB,IAA3B;UACAiB,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,MAA3B;UACAF,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,OAA3B;QACF,CANA,MAMO,IAAIL,KAAK,CAACM,OAAV,EAAmB;UACxB;UACA;UACA;UACAJ,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,OAAlB;QACF,CALO,MAKA;UACL;UACAJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACO,OAA3B;QACF;;QACAL,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACQ,MAAlB;MACD,CAjBD;MAmBA;;;IAGD;;EAvCM,CA7BI;EAuEbC,KAAK,EAAE;IAELnB,QAAQ,CAACoB,QAAD,EAAW;MACjB;MACA,KAAKnB,MAAL,GAAc,EAAd;MACA,KAAKG,OAAL,GAAe,EAAf,CAHiB,CAIjB;;MACA,KAAKA,OAAL,GAAe,KAAKR,UAAL,CAAgBwB,QAAhB,CAAf;IACF;;EARK,CAvEM;;EAkFbC,OAAO,GAAG,CAAC;;AAlFE,CAAf","names":["axios","data","courseList","firstName","lastName","email","semester","course","note","returned","courses","user","methods","handleSubmit","post","catch","error","response","console","log","status","headers","request","message","config","watch","selected","mounted"],"sourceRoot":"","sources":["C:\\Users\\graym\\IdeaProjects\\demo\\src\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <label>FirstName :</label>\n      <input type=\"text\" v-model=\"firstName\">\n\n      <label>LastName :</label>\n      <input type=\"text\" v-model=\"lastName\" >\n\n      <label>Email :</label>\n      <input type=\"email\" v-model=\"email\" required>\n\n      <label>Semester :</label>\n      <select id=\"semester\" v-model=\"semester\">\n        <option value=\"\" disabled></option>\n        <option value=\"spring\">spring</option>\n        <option value=\"summer\">summer</option>\n      </select>\n\n      <label>Course :</label>\n      <select id=\"course\" v-model=\"course\">\n        <option value=\"\" disabled></option>\n        <option v-for=\"course in courses\" v-bind:key=course>{{course}}</option>\n      </select>\n\n      <label>Note for Professor :</label>\n      <textarea v-model=\"note\" rows=\"5\" cols=\"33\"> </textarea>\n\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n\n    </form>\n\n    <p> FirstName: {{ firstName }} </p>\n    <p> LastName: {{ lastName }} </p>\n    <p> Email: {{ email }} </p>\n    <p> Semester: {{ semester  }} </p>\n    <p> Course: {{ course }} </p>\n    <p> Note: {{ note  }} </p>\n\n  </div>\n\n</template>\n\n\n<script>\n\n\nimport axios from \"axios\";\n\nexport default {\n  data() {\n\n    return {\n      courseList: {\n        \"spring\": [\"Beijing\", \"Shanghai\", \"Guangzhou\", \"Tianjin\"],\n        \"fall\": [\"Beijing1\", \"Shanghai2\", \"Guangzhou3\", \"Tianjin4\"],\n        \"summer\": [\"Beijing2\", \"Shanghai1\", \"ssasd\", \"asd\"],\n        },\n      firstName: '',\n      lastName:'',\n      email: '',\n      semester: '',\n      course: '',\n      note: '',\n      returned: '',\n      courses: [],\n\n      user: {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        semester: this.semester,\n        course: this.course,\n        note: this.note,\n      }\n\n    }\n  },\n  methods: {\n    handleSubmit() {\n     /* let info = [\n        this.firstName,\n        this.lastName,\n        this.email,\n        this.semester,\n        this.course,\n        this.note\n      ];*/\n\n      this.user.firstName= this.firstName;\n      this.user.lastName= this.lastName;\n      this.user.email= this.email;\n      this.user.semester= this.semester;\n      this.user.course= this.course;\n      this.user.note= this.note;\n      axios.post(\"http://localhost:3000/api/sendRegistration\", this.user).catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n        console.log(error.config);\n      });\n\n      /*     fetch(\"/api/sendRegistration?personForm=\" + info)\n               .then(response => response.text())\n               //.then(data =>{ this.returned = data })*/\n    },\n\n  },\n  watch: {\n\n    semester(selected) {\n      // clear previously selected values\n      this.course = '';\n      this.courses = [];\n      //set courses depending on the selected semester\n      this.courses = this.courseList[selected]\n    }\n\n  },\n  mounted() {}\n}\n\n</script>\n\n\n<style scoped>\n\nform {\n  max-width: 600px;\n  margin: 30px auto;\n  background: #fff;\n  text-align: left;\n  padding: 20px;\n  border-radius: 10px;\n}\n\nlabel {\n  color: #aaa;\n  display: inline-block;\n  margin: 25px 0 15px;\n  text-transform: uppercase;\n}\n\ninput, select {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid #ddd;\n  color: #555;\n}\n\nbutton {\n  background: rgb(7, 24, 7);\n  border: 0;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 20px;\n}\n\ntextarea {\n  outline: #2c2c2c;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  color: #555;\n  resize: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}