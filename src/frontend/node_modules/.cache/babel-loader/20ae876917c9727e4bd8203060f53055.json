{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      courseList: {\n        \"fall2022\": [\"Algebra I\", \"Economics I\", \"Algebra II\", \"Earth science\", \"French I\"],\n        \"summer2022\": [\"American literature\", \"Life science\", \"Comparative literature\", \"Botany\"]\n      },\n      firstName: '',\n      lastName: '',\n      email: '',\n      semester: '',\n      course: '',\n      note: '',\n      returned: '',\n      courses: [],\n      errors: [],\n      successMessage: ''\n    };\n  },\n\n  methods: {\n    handleSubmit() {\n      let user = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        semester: this.semester,\n        course: this.course,\n        note: this.note\n      }; //reset messages\n\n      this.errors = [];\n      this.successMessage = '';\n      axios.post(\"http://localhost:3000/api/sendRegistration\", user).then(() => {\n        this.successMessage = \"Success, Form submitted!\";\n      }).catch(error => {\n        if (error.response) {\n          // The request was made and the server responded with a status code that falls out of the range of 2xx\n          this.errors = Object.values(error.response.data);\n          console.log(error.response.data);\n        }\n        /*The request was made but no response was received*/\n        else if (error.request) {\n          console.log(error.request);\n        }\n        /* Something happened in setting up the request that triggered an Error */\n        else {\n          console.log('Error', error.message);\n        }\n      });\n    }\n\n  },\n  watch: {\n    semester(selected) {\n      // clear previously selected values\n      this.course = '';\n      this.courses = []; //set courses depending on the selected semester\n\n      this.courses = this.courseList[selected];\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"AAqDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACV,YAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,eAA3C,EAA4D,UAA5D,CADF;QAEV,cAAc,CAAC,qBAAD,EAAwB,cAAxB,EAAwC,wBAAxC,EAAkE,QAAlE;MAFJ,CADP;MAMLC,SAAS,EAAE,EANN;MAOLC,QAAQ,EAAC,EAPJ;MAQLC,KAAK,EAAE,EARF;MASLC,QAAQ,EAAE,EATL;MAULC,MAAM,EAAE,EAVH;MAWLC,IAAI,EAAE,EAXD;MAYLC,QAAQ,EAAE,EAZL;MAaLC,OAAO,EAAE,EAbJ;MAcLC,MAAK,EAAI,EAdJ;MAeLC,cAAa,EAAI;IAfZ,CAAP;EAiBD,CAnBY;;EAoBbC,OAAO,EAAE;IACPC,YAAY,GAAG;MACb,IAAIC,IAAG,GAAI;QACTZ,SAAQ,EAAI,KAAKA,SADR;QAETC,QAAO,EAAI,KAAKA,QAFP;QAGTC,KAAI,EAAI,KAAKA,KAHJ;QAITC,QAAO,EAAI,KAAKA,QAJP;QAKTC,MAAK,EAAI,KAAKA,MALL;QAMTC,IAAG,EAAI,KAAKA;MANH,CAAX,CADa,CASb;;MACA,KAAKG,MAAL,GAAc,EAAd;MACA,KAAKC,cAAL,GAAsB,EAAtB;MAEAZ,KAAK,CAACgB,IAAN,CAAW,4CAAX,EAAyDD,IAAzD,EACKE,IADL,CACU,MAAM;QAAE,KAAKL,cAAL,GAAsB,0BAAtB;MAAiD,CADnE,EAEKM,KAFL,CAEWC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACC,QAAV,EAAoB;UAAE;UACpB,KAAKT,MAAL,GAAcU,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,QAAN,CAAenB,IAA7B,CAAd;UACAsB,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,QAAN,CAAenB,IAA3B;QACF;QAAE;QAHF,KAIK,IAAIkB,KAAK,CAACM,OAAV,EAAmB;UAAEF,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,OAAlB;QAA4B;QACtD;QADK,KAEA;UAAEF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAAK,CAACO,OAA3B;QAAqC;MAC7C,CAVL;IAWD;;EAzBM,CApBI;EA+CbC,KAAK,EAAE;IACLrB,QAAQ,CAACsB,QAAD,EAAW;MACjB;MACA,KAAKrB,MAAL,GAAc,EAAd;MACA,KAAKG,OAAL,GAAe,EAAf,CAHiB,CAIjB;;MACA,KAAKA,OAAL,GAAe,KAAKR,UAAL,CAAgB0B,QAAhB,CAAf;IACF;;EAPK,CA/CM;;EAyDbC,OAAO,GAAG,CAAC;;AAzDE,CAAf","names":["axios","data","courseList","firstName","lastName","email","semester","course","note","returned","courses","errors","successMessage","methods","handleSubmit","user","post","then","catch","error","response","Object","values","console","log","request","message","watch","selected","mounted"],"sourceRoot":"","sources":["C:\\Users\\graym\\IdeaProjects\\demo\\src\\frontend\\src\\components\\RegistrationForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"handleSubmit\">      <v-app class=\"white\"/>\n\n      <label>First Name :</label>\n      <input\n          type=\"text\"\n          v-model=\"firstName\"\n          pattern=\"[a-zA-Z'-'\\s]*\"\n          required\n      />\n\n      <label>Last Name :</label>\n      <input type=\"text\" v-model=\"lastName\" pattern=\"[a-zA-Z'-'\\s]*\" required />\n\n      <label>Email :</label>\n      <input type=\"email\" v-model=\"email\" required />\n\n      <label>Semester :</label>\n      <select id=\"semester\" v-model=\"semester\" required>\n        <option value=\"\" disabled></option>\n        <option value=\"fall2022\">Fall</option>\n        <option value=\"summer2022\">Summer</option>\n      </select>\n\n      <label>Course :</label>\n      <select id=\"course\" v-model=\"course\" required>\n        <option value=\"\" disabled></option>\n        <option v-for=\"course in courses\" v-bind:key=\"course\">\n          {{course}}\n        </option>\n      </select>\n\n      <label>Note for Professor :</label>\n      <textarea v-model=\"note\" rows=\"5\" cols=\"33\"> </textarea>\n\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n\n      <span id=\"errorSpan\">{{errors.join(\", \") }}</span>\n      <span id=\"successSpan\">{{successMessage}}</span>\n    </form>\n\n    <p>Debug</p>\n    <p>First Name: {{ firstName }}</p>\n    <p>Last Name: {{ lastName }}</p>\n    <p>Email: {{ email }}</p>\n    <p>Semester: {{ semester  }}</p>\n    <p>Course: {{ course }}</p>\n    <p>Note: {{ note  }}</p>\n</template>\n<script>\n\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      courseList: {\n        \"fall2022\": [\"Algebra I\", \"Economics I\", \"Algebra II\", \"Earth science\", \"French I\"],\n        \"summer2022\": [\"American literature\", \"Life science\", \"Comparative literature\", \"Botany\"]\n      },\n\n      firstName: '',\n      lastName:'',\n      email: '',\n      semester: '',\n      course: '',\n      note: '',\n      returned: '',\n      courses: [],\n      errors : [],\n      successMessage : '',\n    }\n  },\n  methods: {\n    handleSubmit() {\n      let user = {\n        firstName : this.firstName,\n        lastName : this.lastName,\n        email : this.email,\n        semester : this.semester,\n        course : this.course,\n        note : this.note\n      }\n      //reset messages\n      this.errors = [];\n      this.successMessage = '';\n\n      axios.post(\"http://localhost:3000/api/sendRegistration\", user)\n          .then(() => { this.successMessage = \"Success, Form submitted!\";} )\n          .catch(error => {\n            if (error.response) { // The request was made and the server responded with a status code that falls out of the range of 2xx\n              this.errors = Object.values(error.response.data);\n              console.log(error.response.data);\n            } /*The request was made but no response was received*/\n            else if (error.request) { console.log(error.request); }\n            /* Something happened in setting up the request that triggered an Error */\n            else { console.log('Error', error.message); }\n          });\n    },\n  },\n  watch: {\n    semester(selected) {\n      // clear previously selected values\n      this.course = '';\n      this.courses = [];\n      //set courses depending on the selected semester\n      this.courses = this.courseList[selected]\n    }\n\n  },\n  mounted() {}\n}\n</script>\n\n<style scoped>\n\nform {\n  max-width: 600px;\n  margin: 30px auto;\n  background: #fff;\n  text-align: left;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n#successSpan {\n  color: #002aff;\n  display: inline-block;\n  margin: 25px 0 15px;\n  font-size: 20px;\n}\n\n#errorSpan {\n  color: #ff4040;\n  display: inline-block;\n  margin: 25px 0 15px;\n  font-size: 20px;\n}\nlabel {\n  color: #aaa;\n  margin: 25px 0 15px;\n  display: inline-block;\n  text-transform: uppercase;\n}\ninput{\n  display: block;\n  padding: 10px 6px;\n  box-sizing: border-box;\n  border: none;\n  color: #555;\n  border-bottom: 1px solid #ddd;\n  width: 100%;\n  font-weight: 700;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n}\nselect {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  color: #555;\n\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid #ddd;\n  font-weight: 700;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n\n\n}\nbutton {\n  background: rgb(44, 121, 44);\n  border: 0;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 20px;\n}\n\ntextarea {\n  outline: #2c2c2c;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  color: #555;\n  resize: none;\n}\n\n\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}